// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// GrafanaResourceDefinitionStatusApplyConfiguration represents an declarative configuration of the GrafanaResourceDefinitionStatus type for use
// with apply.
type GrafanaResourceDefinitionStatusApplyConfiguration struct {
	Conditions     []GrafanaResourceDefinitionConditionApplyConfiguration `json:"conditions,omitempty"`
	AcceptedNames  *GrafanaResourceDefinitionNamesApplyConfiguration      `json:"acceptedNames,omitempty"`
	StoredVersions []string                                               `json:"storedVersions,omitempty"`
}

// GrafanaResourceDefinitionStatusApplyConfiguration constructs an declarative configuration of the GrafanaResourceDefinitionStatus type for use with
// apply.
func GrafanaResourceDefinitionStatus() *GrafanaResourceDefinitionStatusApplyConfiguration {
	return &GrafanaResourceDefinitionStatusApplyConfiguration{}
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *GrafanaResourceDefinitionStatusApplyConfiguration) WithConditions(values ...*GrafanaResourceDefinitionConditionApplyConfiguration) *GrafanaResourceDefinitionStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}

// WithAcceptedNames sets the AcceptedNames field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AcceptedNames field is set to the value of the last call.
func (b *GrafanaResourceDefinitionStatusApplyConfiguration) WithAcceptedNames(value *GrafanaResourceDefinitionNamesApplyConfiguration) *GrafanaResourceDefinitionStatusApplyConfiguration {
	b.AcceptedNames = value
	return b
}

// WithStoredVersions adds the given value to the StoredVersions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the StoredVersions field.
func (b *GrafanaResourceDefinitionStatusApplyConfiguration) WithStoredVersions(values ...string) *GrafanaResourceDefinitionStatusApplyConfiguration {
	for i := range values {
		b.StoredVersions = append(b.StoredVersions, values[i])
	}
	return b
}
